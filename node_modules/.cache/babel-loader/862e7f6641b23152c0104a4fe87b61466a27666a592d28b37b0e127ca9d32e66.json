{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\React\\\\text-utils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, \"1500\");\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode('dark');\n      document.body.style.backgroundColor = \"rgb(0 7 20)\";\n      showAlert(\"Darkmode has been enable\", \"success\");\n      document.title = \"TextUtils - DarkMode\";\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Lightmode has been enable\", \"success\");\n      document.title = \"TextUtils - LightMode\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      future: {\n        v7_startTransition: true\n      },\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtils\",\n        aboutText: \"About TextUtils\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(TextForm, {\n            showAlert: showAlert,\n            heading: \"Enter the Text to analyze below\",\n            mode: mode,\n            toggleMode: toggleMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 34\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"about\",\n            element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"rLXVx9POVuN9w55SGbqOU1JJzx4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","About","Navbar","TextForm","Alert","BrowserRouter","Route","Routes","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","children","future","v7_startTransition","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","path","element","heading","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/React/text-utils/src/App.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\n\n\nfunction App() {\n  const [mode,setMode] = useState(\"light\");\n  const [alert,setAlert] = useState(null);\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null)  \n    },\"1500\")\n  }\n  const toggleMode = ()=>{\n    if(mode === \"light\"){\n      setMode('dark')\n      document.body.style.backgroundColor = \"rgb(0 7 20)\";\n      showAlert(\"Darkmode has been enable\", \"success\");\n      document.title = \"TextUtils - DarkMode\"\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Lightmode has been enable\", \"success\");\n      document.title = \"TextUtils - LightMode\"\n    }\n  }\n  return (\n    <>\n    <BrowserRouter future={{ v7_startTransition: true }}>\n      <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      {/* <TextForm showAlert={showAlert} heading=\"Enter the Text to analyze below\" mode={mode} toggleMode={toggleMode} /> */}\n      {/* <About /> */}\n      \n      <Routes>\n        <Route path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the Text to analyze below\" mode={mode} toggleMode={toggleMode} />}>\n         <Route path=\"about\" element={<About />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n      </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}