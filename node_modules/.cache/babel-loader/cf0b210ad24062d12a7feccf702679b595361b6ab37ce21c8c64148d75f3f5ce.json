{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\React\\\\Nazish - GIT\\\\TextUtils-React\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, \"1500\");\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode('dark');\n      document.body.style.backgroundColor = \"rgb(0 7 20)\";\n      showAlert(\"Darkmode has been enable\", \"success\");\n      document.title = \"TextUtils - DarkMode\";\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Lightmode has been enable\", \"success\");\n      document.title = \"TextUtils - LightMode\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      aboutText: \"About TextUtils\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n      showAlert: showAlert,\n      heading: \"Enter the Text to analyze below\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"rLXVx9POVuN9w55SGbqOU1JJzx4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","TextForm","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","children","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","heading","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/React/Nazish - GIT/TextUtils-React/src/App.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n\n\nfunction App() {\n  const [mode,setMode] = useState(\"light\");\n  const [alert,setAlert] = useState(null);\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null)  \n    },\"1500\")\n  }\n  const toggleMode = ()=>{\n    if(mode === \"light\"){\n      setMode('dark')\n      document.body.style.backgroundColor = \"rgb(0 7 20)\";\n      showAlert(\"Darkmode has been enable\", \"success\");\n      document.title = \"TextUtils - DarkMode\"\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Lightmode has been enable\", \"success\");\n      document.title = \"TextUtils - LightMode\"\n    }\n  }\n  return (\n    <>\n      <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <TextForm showAlert={showAlert} heading=\"Enter the Text to analyze below\" mode={mode} toggleMode={toggleMode} />\n      </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;EACxC,MAAM,CAACY,KAAK,EAACC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACvC,MAAMc,SAAS,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAG;IACjCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAACA;IACP,CAAC,CAAC;IACFE,UAAU,CAAC,MAAI;MACbL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAC,MAAM,CAAC;EACX,CAAC;EACD,MAAMM,UAAU,GAAGA,CAAA,KAAI;IACrB,IAAGT,IAAI,KAAK,OAAO,EAAC;MAClBC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,aAAa;MACnDT,SAAS,CAAC,0BAA0B,EAAE,SAAS,CAAC;MAChDM,QAAQ,CAACI,KAAK,GAAG,sBAAsB;IACzC,CAAC,MACG;MACFb,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CT,SAAS,CAAC,2BAA2B,EAAE,SAAS,CAAC;MACjDM,QAAQ,CAACI,KAAK,GAAG,uBAAuB;IAC1C;EACF,CAAC;EACD,oBACEnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA,CAACJ,MAAM;MAACuB,KAAK,EAAC,WAAW;MAACE,SAAS,EAAC,iBAAiB;MAAChB,IAAI,EAAEA,IAAK;MAACS,UAAU,EAAEA;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5FzB,OAAA,CAACF,KAAK;MAACS,KAAK,EAAEA;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvBzB,OAAA,CAACH,QAAQ;MAACY,SAAS,EAAEA,SAAU;MAACiB,OAAO,EAAC,iCAAiC;MAACrB,IAAI,EAAEA,IAAK;MAACS,UAAU,EAAEA;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC9G,CAAC;AAET;AAACrB,EAAA,CAjCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}